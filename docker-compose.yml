services:

  db:
    container_name: db
    image: postgres
    networks:
      - main-net
    environment:
      POSTGRES_USER: azizairo
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./database/schema.sql:/docker-entrypoint-initdb.d/init.sql
      - db:/data/postgres
    ports:
      - "5332:5432"
    restart: unless-stopped

  messaging-service:
    container_name: messaging-service
    networks:
      - main-net
    build:
      context: messaging-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka

  messaging-receiver:
    container_name: messaging-receiver
    networks:
      - main-net
    build:
      context: messaging-receiver
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - db
      - kafka
      - messaging-service

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    networks:
      - main-net
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - main-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    networks:
      - main-net
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

networks:
  main-net:
    name: my-shared-db-network
    driver: bridge

volumes:
  db: